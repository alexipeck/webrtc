[package]
name = "webrtc"
version = "0.11.0"
authors = ["Rain Liu <yliu@webrtc.rs>"]
edition = "2021"
description = "A pure Rust implementation of WebRTC API"
license = "MIT OR Apache-2.0"
documentation = "https://docs.rs/webrtc"
homepage = "https://webrtc.rs"
repository = "https://github.com/webrtc-rs/webrtc"
readme = "../README.md"

[features]
pem = ["dep:pem", "dtls/pem"]
openssl = ["srtp/openssl"]
vendored-openssl = ["srtp/vendored-openssl"]
internal = ["data", "dtls", "ice", "interceptor", "mdns", "media", "rtcp", "rtp", "sctp", "sdp", "srtp", "stun", "turn", "util"]
external = ["arc-swap", "tokio", "log", "async-trait", "serde", "serde_json", "rand", "bytes", "thiserror", "waitgroup", "regex", "smol_str", "url", "rustls", "rcgen", "ring", "sha2", "lazy_static", "hex", "pem", "time", "cfg-if", "portable-atomic"]
wasm = []
default = ["internal", "external"]

[dependencies]
data = { version = "0.9.0", path = "../data", optional = true, package = "webrtc-data" }
dtls = { version = "0.10.0", path = "../dtls", optional = true, package = "webrtc-dtls" }
ice = { version = "0.11.0", path = "../ice", optional = true, package = "webrtc-ice" }
interceptor = { version = "0.12.0", path = "../interceptor", optional = true }
mdns = { version = "0.7.0", path = "../mdns", optional = true, package = "webrtc-mdns" }
media = { version = "0.8.0", path = "../media", optional = true, package = "webrtc-media" }
rtcp = { version = "0.11.0", path = "../rtcp", optional = true }
rtp = { version = "0.11.0", path = "../rtp", optional = true }
sctp = { version = "0.10.0", path = "../sctp", optional = true, package = "webrtc-sctp" }
sdp = { version = "0.6.2", path = "../sdp", optional = true }
srtp = { version = "0.13.0", path = "../srtp", optional = true, package = "webrtc-srtp" }
stun = { version = "0.6.0", path = "../stun", optional = true }
turn = { version = "0.8.0", path = "../turn", optional = true }
util = { version = "0.9.0", path = "../util", optional = true, package = "webrtc-util" }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { version = "1.32.0", optional = true, features = [
    "fs",
    "io-util",
    "io-std",
    "macros",
    "net",
    "parking_lot",
    "rt",
    "rt-multi-thread",
    "sync",
    "time",
] }

arc-swap = { version = "1", optional = true }
log = { version = "0.4", optional = true }
async-trait = {version = "0.1", optional = true }
serde = { version = "1", optional = true, features = ["derive"] }
serde_json = { version = "1", optional = true }
rand = { version = "0.8", optional = true }
bytes = { version = "1", optional = true }
thiserror = { version = "1", optional = true }
waitgroup = { version = "0.1", optional = true }
regex = { version = "1.9.5", optional = true }
smol_str = { version = "0.2", optional = true, features = ["serde"] }
url = { version = "2", optional = true }
rustls = { version = "0.23.10", optional = true, default-features = false, features = ["std", "ring"] }
rcgen = { version = "0.13", optional = true, features = ["pem", "x509-parser"]}
ring = { version = "0.17", optional = true }
sha2 = { version = "0.10", optional = true }
lazy_static = { version = "1.4", optional = true }
hex = { version = "0.4", optional = true }
pem = { version = "3", optional = true }
time = { version = "0.3", optional = true }
cfg-if = { version = "1", optional = true }
portable-atomic = { version = "1.6", optional = true }

[dev-dependencies]
tokio-test = "0.4"
env_logger = "0.11.3"

[lints]
workspace = true
